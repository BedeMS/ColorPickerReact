[{"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/index.js":"1","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/App.js":"2","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/reportWebVitals.js":"3","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/Palette.js":"4","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/seedColors.js":"5","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/ColorBox.js":"6","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/color-helpers.js":"7","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/Navbar.js":"8","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/PaletteList.js":"9","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/MiniPalette.js":"10","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/SingleColorPalette.js":"11","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/PaletteFooter.js":"12","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/ColorBoxStyles.js":"13","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/PaletteStyles.js":"14","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/MiniPaletteStyles.js":"15","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/PaletteFooterStyles.js":"16","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/PaletteListStyles.js":"17","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/NavbarStyles.js":"18","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/NewPaletteForm.js":"19","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/DraggleColorBox.js":"20","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/DraggleColorList.js":"21"},{"size":593,"mtime":1611718330396,"results":"22","hashOfConfig":"23"},{"size":2106,"mtime":1612413390789,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611160461871,"results":"25","hashOfConfig":"23"},{"size":1414,"mtime":1612322822871,"results":"26","hashOfConfig":"23"},{"size":9798,"mtime":1612237727520,"results":"27","hashOfConfig":"23"},{"size":1842,"mtime":1612324113430,"results":"28","hashOfConfig":"23"},{"size":2205,"mtime":1612322852811,"results":"29","hashOfConfig":"23"},{"size":2724,"mtime":1612324186557,"results":"30","hashOfConfig":"23"},{"size":986,"mtime":1612331065582,"results":"31","hashOfConfig":"23"},{"size":1320,"mtime":1612324225393,"results":"32","hashOfConfig":"23"},{"size":1818,"mtime":1612324250071,"results":"33","hashOfConfig":"23"},{"size":478,"mtime":1612322750647,"results":"34","hashOfConfig":"23"},{"size":2929,"mtime":1612322649093,"results":"35","hashOfConfig":"23"},{"size":784,"mtime":1612416995082,"results":"36","hashOfConfig":"23"},{"size":818,"mtime":1612321711828,"results":"37","hashOfConfig":"23"},{"size":278,"mtime":1612322756870,"results":"38","hashOfConfig":"23"},{"size":634,"mtime":1612407878996,"results":"39","hashOfConfig":"23"},{"size":983,"mtime":1612323954245,"results":"40","hashOfConfig":"23"},{"size":9782,"mtime":1612418213784,"results":"41","hashOfConfig":"23"},{"size":1229,"mtime":1612416252305,"results":"42","hashOfConfig":"23"},{"size":548,"mtime":1612416318209,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"8g57vj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/index.js",[],["94","95"],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/App.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/reportWebVitals.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/Palette.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/seedColors.js",["96"],"export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"ðŸŽ¨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"ðŸ¤™\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"ðŸ‡³ðŸ‡±\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"ðŸ‡ºðŸ‡¸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"ðŸ‡¦ðŸ‡º\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"ðŸ‡¬ðŸ‡§\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"ðŸ‡ªðŸ‡¸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"ðŸ‡®ðŸ‡³\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"ðŸ‡«ðŸ‡·\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/ColorBox.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/color-helpers.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/Navbar.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/PaletteList.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/MiniPalette.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/SingleColorPalette.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/PaletteFooter.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/ColorBoxStyles.js",["97"],"import chroma from \"chroma-js\";\n\nexport default {\n    ColorBox: {\n      width: \"20%\",\n      height: (props) => (props.showingFullPalette ? \"25%\" : \"50%\"),\n      margin: \"0 auto\",\n      display: \"inline-block\",\n      position: \"relative\",\n      cursor: \"pointer\",\n      marginBottom: \"-3.5px\",\n      \"&:hover button\": {\n        opacity: \"1\",\n        transition: \"0.5s\",\n      },\n    },\n    copyText: {\n      color: (props) =>\n        chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\",\n    },\n    // colorName: {\n    //   color: (props) =>\n    //     chroma(props.background).luminance() < 0.08 ? \"white\" : \"black\",\n    // },\n    seeMore: {\n      color: (props) =>\n        chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\",\n      background: \"rgba(255, 255, 255, 0.3)\",\n      position: \"absolute\",\n      border: \"none\",\n      right: \"0\",\n      bottom: \"0\",\n      // color: \"white\",\n      width: \"60px\",\n      height: \"30px\",\n      textAlign: \"center\",\n      lineHeight: \"30px\",\n      textTransform: \"uppercase\",\n    },\n    copyButton: {\n      color: (props) =>\n        chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\",\n      width: \"100px\",\n      height: \"30px\",\n      position: \"absolute\",\n      textDecoration: \"none\",\n      display: \"inline-block\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      outline: \"none\",\n      textAlign: \"center\",\n      background: \"rgba(255, 255, 255, 0.3)\",\n      lineHeight: \"30px\",\n      textTransform: \"uppercase\",\n      border: \"none\",\n      opacity: \"0\",\n    },\n    boxContent: {\n      position: \"absolute\",\n      width: \"100%\",\n      left: \"0px\",\n      bottom: \"0\",\n      padding: \"10px\",\n      color: \"black\",\n      letterSpacing: \"1px\",\n      textTransform: \"uppercase\",\n      fontSize: \"12px\",\n    },\n    copyOverlay: {\n      opacity: \"0\",\n      zIndex: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      transition: \"transform 0.6s ease-in-out\",\n    },\n    showOverlay: {\n      opacity: \"1\",\n      transform: \"scale(50)\",\n      zIndex: \"10\",\n      position: \"absolute\",\n    },\n    copyMessage: {\n      position: \"fixed\",\n      left: \"0\",\n      right: \"0\",\n      top: \"0\",\n      bottom: \"0\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      fontSize: \"4rem\",\n      transform: \"scale(0.1)\",\n      opacity: \"0\",\n      color: \"white\",\n      \"& h1\": {\n        fontWeight: '400',\n        textShadow: '1px 2px black',\n        background: 'rgba(255, 255, 255, 0.2)',\n        width: '100%',\n        textAlign: 'center',\n        marginBottom: '0',\n        padding:'1rem',\n        textTransform: 'uppercase',\n      },\n      \"& p\": {\n        fontSize: \"2rem\",\n        fontWeight: \"200\",\n      }\n    },\n    showMessage: {\n      opacity: \"1\",\n      transform: 'scale(1)',\n      zIndex: '25',\n      transition: 'all 0.4s ease-in-out 0.2s',\n    }\n  };","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/PaletteStyles.js",["98"],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/MiniPaletteStyles.js",["99"],"export default {\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: \"5px\",\n    padding: \"0.5rem\",\n    position: \"relative\",\n    overflow: \"hidder\",\n    border: \"1px solid black\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  colors: {\n    backgroundColor: \"#dae1e4\",\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n    height: \"150px\",\n    width: \"100%\",\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: 0,\n    color: \"black\",\n    paddingTop: \"0.5rem\",\n    fontSize: \"1rem\",\n    position: \"relative\",\n  },\n  emoji: {\n    marginLeft: \"0.5rem\",\n    fontSize: \"1.5rem\",\n  },\n  miniColor: {\n    height: \"25%\",\n    width: \"20%\",\n    display: \"inline-block\",\n    margin: \"0 auto\",\n    position: \"relative\",\n    marginBottom: \"-3.5px\",\n  },\n};\n","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/PaletteFooterStyles.js",["100"],"export default {\n  PaletteFooter: {\n    color: \"black\",\n    backgroundColor: \"white\",\n    height: \"5vh\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    fontWeight: \"bold\",\n  },\n  emoji: {\n    fontSize: \"1.5rem\",\n    margin: \"0 1rem\",\n  },\n};\n","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/PaletteListStyles.js",["101"],"export default {\n  root: {\n    backgroundColor: \"blue\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  container: {\n    width: \"50%\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n  },\n  nav: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    color: \"white\",\n    \"& a\": {\n      color: \"white\",\n    }\n  },\n  palettes: {\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, 30%)\",\n    gridGap: \"5%\",\n  },\n};\n","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/styles/NavbarStyles.js",["102"],"export default {\n  Navbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: \"6vh\",\n  },\n\n  logo: {\n    marginRight: \"15px\",\n    padding: \"0 13px\",\n    fontSize: \"22px\",\n    backgroundColor: \"#eceff1\",\n    fontFamily: \"Roboto\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n  },\n  slider: {\n    display: \"inline-block\",\n    width: \"340px\",\n    margin: \"0 10px\",\n    \"& .rc-slider-track\": {\n      backgroundColor: \"transparent\",\n      height: \"8px\",\n    },\n    \"& .rc-slider-rail\": {\n      height: \"8px\",\n    },\n    \"& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:hover, .rc-slider-handle:focus\": {\n      outline: \"none\",\n      border: \"2px solid green\",\n      boxShadow: \"none\",\n      backgroundColor: \"green\",\n      marginTop: \"-3px\",\n    },\n  },\n  selectContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"1rem\",\n  },\n};\n","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/NewPaletteForm.js",["103","104"],"import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { ChromePicker } from \"react-color\";\nimport DraggleColorBox from \"./DraggleColorBox\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DraggleColorList from \"./DraggleColorList\";\nimport { arrayMove } from \"react-sortable-hoc\";\n\nconst drawerWidth = 400;\n\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass NewPaletteForm extends React.Component {\n  static defaultProps = {\n    maxColors: 20,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      currentColor: \"teal\",\n      colors: this.props.palettes[0].colors,\n      newColorName: \"\",\n      newPaletteName: \"\",\n    };\n    this.updateCurrentColor = this.updateCurrentColor.bind(this);\n    this.addNewColor = this.addNewColor.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.removeColor = this.removeColor.bind(this);\n    this.clearColors = this.clearColors.bind(this);\n    this.addRandomColor = this.addRandomColor.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.colors);\n    ValidatorForm.addValidationRule(\"isColorNameUnique\", (value) =>\n      this.state.colors.every(\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\n      )\n    );\n    ValidatorForm.addValidationRule(\"isColorUnique\", (value) =>\n      this.state.colors.every(({ color }) => color !== this.state.currentColor)\n    );\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", (value) =>\n      this.props.palettes.every(\n        ({ paletteName }) => value.toLowerCase() !== paletteName.toLowerCase()\n      )\n    );\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n  updateCurrentColor(newColor) {\n    console.log(newColor);\n    this.setState({ currentColor: newColor.hex });\n  }\n  addNewColor() {\n    const newColor = {\n      color: this.state.currentColor,\n      name: this.state.newColorName,\n    };\n    this.setState({ colors: [...this.state.colors, newColor] });\n  }\n  removeColor(colorName) {\n    this.setState({\n      colors: this.state.colors.filter((color) => color.name !== colorName),\n    });\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(({ colors }) => ({\n      colors: arrayMove(colors, oldIndex, newIndex),\n    }));\n  };\n\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n    console.log(this.state.newName);\n  }\n\n  handleSubmit() {\n    const newName = this.state.newPaletteName;\n    const newPalette = {\n      paletteName: newName,\n      id: newName.toLowerCase().replace(/ /g, \"-\"),\n      colors: this.state.colors,\n    };\n    this.props.savePalette(newPalette);\n    this.props.history.push(\"/\");\n  }\n\n  clearColors() {\n    this.setState({ colors: [] });\n  }\n\n  addRandomColor() {\n    //pick random color from existing palettes\n    const allColors = this.props.palettes.map((p) => p.colors).flat();\n    let rand = Math.floor(Math.random() * allColors.length);\n    const randomColor = allColors[rand];\n    this.setState({ colors: [...this.state.colors, randomColor] });\n  }\n\n  render() {\n    const { classes, maxColors } = this.props;\n    const { open } = this.state;\n    const paletteIsFull = this.state.colors.length >= maxColors;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          color=\"default\"\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Persistent drawer\n            </Typography>\n            <ValidatorForm onSubmit={this.handleSubmit}>\n              <TextValidator\n                label=\"Palette Name\"\n                name=\"newPaletteName\"\n                onChange={this.handleChange}\n                value={this.state.newPaletteName}\n                validators={[\"required\", \"isPaletteNameUnique\"]}\n                errorMessages={[\n                  \"Palette Name is Required\",\n                  \"Palette Name Must Be Unique\",\n                ]}\n              />\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                Save Palette\n              </Button>\n            </ValidatorForm>\n            {/* <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleSubmit}\n            >\n              Save Palette\n            </Button> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <Typography variant=\"h4\">Design Your Palette</Typography>\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.clearColors}\n            >\n              Clear Palette\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.addRandomColor}\n              disabled={paletteIsFull}\n            >\n              Random Color\n            </Button>\n          </div>\n          <ChromePicker\n            onChangeComplete={this.updateCurrentColor}\n            color={this.state.currentColor}\n          />\n          <ValidatorForm onSubmit={this.addNewColor}>\n            <TextValidator\n              name=\"newColorName\"\n              value={this.state.newColorName}\n              onChange={this.handleChange}\n              validators={[\"required\", \"isColorNameUnique\", \"isColorUnique\"]}\n              errorMessages={[\n                \"Field is Required\",\n                \"Color name must be Unique\",\n                \"Color already Used\",\n              ]}\n            />\n            <Button\n              disabled={paletteIsFull}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                backgroundColor: paletteIsFull\n                  ? \"grey\"\n                  : this.state.currentColor,\n              }}\n              type=\"submit\"\n            >\n              {paletteIsFull ? \"Palette Is Full\" : \"Add Color\"}\n            </Button>\n          </ValidatorForm>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <DraggleColorList\n            colors={this.state.colors}\n            removeColor={this.removeColor}\n            axis=\"xy\"\n            onSortEnd={this.onSortEnd}\n          />\n          {/* {this.state.colors.map((color) => (\n            <DraggleColorBox\n              key={color.name}\n              color={color.color}\n              name={color.name}\n              handleClick={() => this.removeColor(color.name)}\n            />\n          ))} */}\n        </main>\n      </div>\n    );\n  }\n}\n\n// NewPaletteForm.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   theme: PropTypes.object.isRequired,\n// };\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\n","/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/DraggleColorBox.js",[],"/Users/bedesahlu/Desktop/React/Practice/color-master/colors-app/src/DraggleColorList.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":1,"nodeType":"111","endLine":244,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":3,"column":1,"nodeType":"111","endLine":118,"endColumn":5},{"ruleId":"109","severity":1,"message":"112","line":1,"column":1,"nodeType":"111","endLine":37,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":1,"column":1,"nodeType":"111","endLine":42,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":1,"column":1,"nodeType":"111","endLine":15,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":1,"column":1,"nodeType":"111","endLine":33,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":1,"column":1,"nodeType":"111","endLine":47,"endColumn":3},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"117","line":15,"column":8,"nodeType":"115","messageId":"116","endLine":15,"endColumn":23},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'DraggleColorBox' is defined but never used.","no-global-assign","no-unsafe-negation"]